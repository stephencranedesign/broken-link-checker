var Client = require('ftp');
var googleAuth = require('./google-apis.js');
var fs = require('fs');
var recursiveCheck = require('./utils.js').recursiveCheck;
var packageJson = require('../package.json');

var SiteMap = function(url, list) {
	this.url = url;
	this.list = list;
	return this;
};

SiteMap.prototype.generate = function() {
	console.log('list: ', this.list);
	var siteMap = ['<?xml version="1.0" encoding="UTF-8"?>\n<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">\n\n<!-- Generated by: '+packageJson.name+' | version: ' +packageJson.version+ '.. -->\n\n'];
	this.list.forEach(function(obj) {
		// console.log('fileType: ', obj.fileType);
		if( this._isHtml(obj.contentType) || this._isPdf(obj.contentType) ) {
			if( obj.lastModified !== null ) {
				siteMap.push('\n<url>\n\t<loc>'+this.url+obj.path+'</loc>\n\t<lastmod>'+obj.lastModified+'</lastmod>\n</url>');
			}
			else {
				siteMap.push('\n<url>\n\t<loc>'+this.url+obj.path+'</loc>\n</url>');
			}
		}
	}.bind(this));
	siteMap.push('\n\n</urlset>');
	this.siteMap = siteMap;

	return siteMap.join('');
};

SiteMap.prototype._isHtml = function(fileType) { return /text\/html/.test(fileType) };
SiteMap.prototype._isPdf = function(fileType) { return /application\/pdf/.test(fileType) };

module.exports = SiteMap;

/*
	1) what format should it look like?
	2) how does backend need to interact with it?
		- somehow backend will need to hit the endpoint and then take the string and save that to site?
*/