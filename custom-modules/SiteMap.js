var Client = require('ftp');
var googleAuth = require('../custom-modules/googleApis.js');
var fs = require('fs');

var SiteMap = function(url, list) {
	this.url = url;
	this.list = list;
	this.build();
	return this;
};
SiteMap.prototype.build = function() {
	console.log('list: ', this.list);
	var siteMap = ['<!-- Generated by: Cool Name for App.. -->\n\n<?xml version="1.0" encoding="UTF-8"?>\n<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">\n'];
	this.list.forEach(function(obj) {
		console.log('fileType: ', obj.fileType);
		if( this._isHtml(obj.fileType) || this._isPdf(obj.fileType) ) {
			if( obj.lastModified !== null ) {
				siteMap.push('\n<url>\n\t<loc>'+obj.fileName+'</loc>\n\t<lastmod>'+obj.lastModified+'</lastmod>\n</url>');
			}
			else {
				siteMap.push('\n<url>\n\t<loc>'+obj.fileName+'</loc>\n</url>');
			}
		}
	}.bind(this));
	siteMap.push('\n\n</urlset>');
	this.siteMap = siteMap;
	this.saveToServer();
	return this;
};
SiteMap.prototype._isHtml = function(fileType) { return /text\/html/.test(fileType) };
SiteMap.prototype._isPdf = function(fileType) { return /application\/pdf/.test(fileType) };
SiteMap.prototype.submited = false;
SiteMap.prototype.ftped = false;
SiteMap.prototype.saveToServer  = function() {
	var string = this.siteMap.join('');
	fs.unlink('sitemap.xml', function() {
    	console.log('deleted');
    	fs.appendFile('siteMap.xml', string, 'utf8', function() {
	    	console.log('done');
	    });
    });
};
SiteMap.prototype.submit = function() {
	this._ftp({}, function() {
		console.log('ftp success!');
	});
};
SiteMap.prototype._submitToGoogle = function() {
	googleAuth.submitSiteMap(this.url, this.url+'/siteMap.xml', this._submitToGoogleComplete.bind(this));
};
SiteMap.prototype._submitToGoogleComplete = function(o) {
	console.log('callback: ', o);
};
SiteMap.prototype._ftp = function(connect, callback, errback) {
	console.log('yo');
	var c = new Client();

	c.on('greeting', function(msg) { console.log('greeting', msg); });
	// c.on('close', function() { console.log('close'); });
	// c.on('end', function() { console.log('end'); });
	c.on('error', function(err) { console.log('error', err); }); 

	c.on('ready', function() {

        c.put('siteMap.xml', 'siteMap.xml', function(err) {
            if (err) {
            	errback(err);
            	return;
            }
            
            c.end();
            callback();
        });

	});

	c.connect({
	    host:  process.env.HOST,
	    user: process.env.USER,
	    password: process.env.PASS,
	});
	// c.connect(connect);
};

module.exports = SiteMap;